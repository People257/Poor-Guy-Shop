// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/people257/poor-guy-shop/common/server"
	payment4 "github.com/people257/poor-guy-shop/payment-service/api/payment"
	"github.com/people257/poor-guy-shop/payment-service/cmd/grpc/config"
	"github.com/people257/poor-guy-shop/payment-service/cmd/grpc/internal"
	payment3 "github.com/people257/poor-guy-shop/payment-service/internal/application/payment"
	refund2 "github.com/people257/poor-guy-shop/payment-service/internal/application/refund"
	"github.com/people257/poor-guy-shop/payment-service/internal/domain/payment"
	"github.com/people257/poor-guy-shop/payment-service/internal/domain/refund"
	payment2 "github.com/people257/poor-guy-shop/payment-service/internal/infra/payment"
	"github.com/people257/poor-guy-shop/payment-service/internal/infra/repository"
)

// Injectors from wire.go:

// InitializeApplication 初始化应用程序
func InitializeApplication(ctx context.Context, configPath string) (*Application, func(), error) {
	configConfig := config.MustLoad(configPath)
	grpcServerConfig := config.GetGrpcServerConfig(configConfig)
	serverServer, cleanup := server.InitializeServer(ctx, grpcServerConfig)
	databaseConfig := config.GetDBConfig(configConfig)
	db := internal.NewDatabase(databaseConfig)
	gormDB := internal.NewGormDB(db)
	query := internal.NewQuery(db)
	paymentRepository := repository.NewPaymentRepository(gormDB, query)
	domainService := payment.NewDomainService(paymentRepository)
	alipayConfig := config.GetAlipayConfig(configConfig)
	paymentClient := payment2.NewAlipayClient(alipayConfig)
	service := payment3.NewService(domainService, paymentClient)
	refundRepository := repository.NewRefundRepository(gormDB, query)
	refundDomainService := refund.NewDomainService(refundRepository)
	refundService := refund2.NewService(refundDomainService, refundRepository, paymentRepository, paymentClient)
	grpcHandler := payment4.NewGrpcHandler(service, refundService)
	application := NewApplication(serverServer, grpcHandler)
	return application, func() {
		cleanup()
	}, nil
}
