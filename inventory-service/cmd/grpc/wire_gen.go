// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	inventory3 "github.com/people257/poor-guy-shop/inventory-service/api/inventory"
	"github.com/people257/poor-guy-shop/inventory-service/cmd/grpc/config"
	"github.com/people257/poor-guy-shop/inventory-service/cmd/grpc/internal"
	inventory2 "github.com/people257/poor-guy-shop/inventory-service/internal/application/inventory"
	reservation2 "github.com/people257/poor-guy-shop/inventory-service/internal/application/reservation"
	"github.com/people257/poor-guy-shop/inventory-service/internal/domain/inventory"
	"github.com/people257/poor-guy-shop/inventory-service/internal/domain/reservation"
	"github.com/people257/poor-guy-shop/inventory-service/internal/infra/client"
	"github.com/people257/poor-guy-shop/inventory-service/internal/infra/repository"
)

// Injectors from wire.go:

// InitializeApplication 初始化应用程序
func InitializeApplication(configPath2 string) (*Application, error) {
	configConfig := config.NewConfig(configPath2)
	databaseConfig := config.GetDatabaseConfig(configConfig)
	db := internal.NewDatabase(databaseConfig)
	gormDB := internal.NewGormDB(db)
	query := internal.NewQuery(db)
	inventoryRepository := repository.NewInventoryRepository(gormDB, query)
	inventoryLogRepository := repository.NewInventoryLogRepository(gormDB, query)
	domainService := inventory.NewDomainService(inventoryRepository, inventoryLogRepository)
	service := inventory2.NewService(domainService, inventoryRepository, inventoryLogRepository)
	reservationRepository := repository.NewReservationRepository(gormDB, query)
	reservationDomainService := reservation.NewDomainService(reservationRepository, domainService)
	reservationService := reservation2.NewService(reservationDomainService, reservationRepository)
	servicesConfig := config.GetServicesConfig(configConfig)
	manager, err := client.NewManager(servicesConfig)
	if err != nil {
		return nil, err
	}
	businessService := inventory2.NewBusinessService(service, reservationService, manager)
	server := inventory3.NewServer(service, businessService, reservationService)
	application := NewApplication(server)
	return application, nil
}
