// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: proto/inventory/inventory.proto

package inventory

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 库存变动类型枚举
type InventoryChangeType int32

const (
	InventoryChangeType_INVENTORY_CHANGE_TYPE_UNSPECIFIED InventoryChangeType = 0
	InventoryChangeType_INVENTORY_CHANGE_TYPE_IN          InventoryChangeType = 1 // 入库
	InventoryChangeType_INVENTORY_CHANGE_TYPE_OUT         InventoryChangeType = 2 // 出库
	InventoryChangeType_INVENTORY_CHANGE_TYPE_RESERVE     InventoryChangeType = 3 // 预占
	InventoryChangeType_INVENTORY_CHANGE_TYPE_RELEASE     InventoryChangeType = 4 // 释放预占
	InventoryChangeType_INVENTORY_CHANGE_TYPE_ADJUST      InventoryChangeType = 5 // 库存调整
)

// Enum value maps for InventoryChangeType.
var (
	InventoryChangeType_name = map[int32]string{
		0: "INVENTORY_CHANGE_TYPE_UNSPECIFIED",
		1: "INVENTORY_CHANGE_TYPE_IN",
		2: "INVENTORY_CHANGE_TYPE_OUT",
		3: "INVENTORY_CHANGE_TYPE_RESERVE",
		4: "INVENTORY_CHANGE_TYPE_RELEASE",
		5: "INVENTORY_CHANGE_TYPE_ADJUST",
	}
	InventoryChangeType_value = map[string]int32{
		"INVENTORY_CHANGE_TYPE_UNSPECIFIED": 0,
		"INVENTORY_CHANGE_TYPE_IN":          1,
		"INVENTORY_CHANGE_TYPE_OUT":         2,
		"INVENTORY_CHANGE_TYPE_RESERVE":     3,
		"INVENTORY_CHANGE_TYPE_RELEASE":     4,
		"INVENTORY_CHANGE_TYPE_ADJUST":      5,
	}
)

func (x InventoryChangeType) Enum() *InventoryChangeType {
	p := new(InventoryChangeType)
	*p = x
	return p
}

func (x InventoryChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InventoryChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_inventory_inventory_proto_enumTypes[0].Descriptor()
}

func (InventoryChangeType) Type() protoreflect.EnumType {
	return &file_proto_inventory_inventory_proto_enumTypes[0]
}

func (x InventoryChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InventoryChangeType.Descriptor instead.
func (InventoryChangeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{0}
}

// 库存信息
type Inventory struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SkuId             string                 `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                                      // SKU ID
	AvailableQuantity int32                  `protobuf:"varint,2,opt,name=available_quantity,json=availableQuantity,proto3" json:"available_quantity,omitempty"` // 可用库存
	ReservedQuantity  int32                  `protobuf:"varint,3,opt,name=reserved_quantity,json=reservedQuantity,proto3" json:"reserved_quantity,omitempty"`    // 预占库存
	TotalQuantity     int32                  `protobuf:"varint,4,opt,name=total_quantity,json=totalQuantity,proto3" json:"total_quantity,omitempty"`             // 总库存
	AlertQuantity     int32                  `protobuf:"varint,5,opt,name=alert_quantity,json=alertQuantity,proto3" json:"alert_quantity,omitempty"`             // 告警库存
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                          // 更新时间
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{0}
}

func (x *Inventory) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *Inventory) GetAvailableQuantity() int32 {
	if x != nil {
		return x.AvailableQuantity
	}
	return 0
}

func (x *Inventory) GetReservedQuantity() int32 {
	if x != nil {
		return x.ReservedQuantity
	}
	return 0
}

func (x *Inventory) GetTotalQuantity() int32 {
	if x != nil {
		return x.TotalQuantity
	}
	return 0
}

func (x *Inventory) GetAlertQuantity() int32 {
	if x != nil {
		return x.AlertQuantity
	}
	return 0
}

func (x *Inventory) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 库存变动日志
type InventoryLog struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                   // 日志ID
	SkuId          string                 `protobuf:"bytes,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                                // SKU ID
	Type           InventoryChangeType    `protobuf:"varint,3,opt,name=type,proto3,enum=inventory.inventory.InventoryChangeType" json:"type,omitempty"` // 变动类型
	Quantity       int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`                                      // 变动数量
	BeforeQuantity int32                  `protobuf:"varint,5,opt,name=before_quantity,json=beforeQuantity,proto3" json:"before_quantity,omitempty"`    // 变动前数量
	AfterQuantity  int32                  `protobuf:"varint,6,opt,name=after_quantity,json=afterQuantity,proto3" json:"after_quantity,omitempty"`       // 变动后数量
	Reason         string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`                                           // 变动原因
	OrderId        string                 `protobuf:"bytes,8,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                          // 关联订单ID
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                    // 创建时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InventoryLog) Reset() {
	*x = InventoryLog{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryLog) ProtoMessage() {}

func (x *InventoryLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryLog.ProtoReflect.Descriptor instead.
func (*InventoryLog) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{1}
}

func (x *InventoryLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InventoryLog) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *InventoryLog) GetType() InventoryChangeType {
	if x != nil {
		return x.Type
	}
	return InventoryChangeType_INVENTORY_CHANGE_TYPE_UNSPECIFIED
}

func (x *InventoryLog) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *InventoryLog) GetBeforeQuantity() int32 {
	if x != nil {
		return x.BeforeQuantity
	}
	return 0
}

func (x *InventoryLog) GetAfterQuantity() int32 {
	if x != nil {
		return x.AfterQuantity
	}
	return 0
}

func (x *InventoryLog) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *InventoryLog) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *InventoryLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// 库存预占记录
type InventoryReservation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // 预占ID
	SkuId         string                 `protobuf:"bytes,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`             // SKU ID
	OrderId       string                 `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`       // 订单ID
	Quantity      int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`                   // 预占数量
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                        // 状态：reserved/confirmed/released
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // 过期时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryReservation) Reset() {
	*x = InventoryReservation{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryReservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryReservation) ProtoMessage() {}

func (x *InventoryReservation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryReservation.ProtoReflect.Descriptor instead.
func (*InventoryReservation) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{2}
}

func (x *InventoryReservation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InventoryReservation) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *InventoryReservation) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *InventoryReservation) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *InventoryReservation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InventoryReservation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *InventoryReservation) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// 查询库存请求
type GetInventoryReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkuId         string                 `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"` // SKU ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryReq) Reset() {
	*x = GetInventoryReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryReq) ProtoMessage() {}

func (x *GetInventoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryReq.ProtoReflect.Descriptor instead.
func (*GetInventoryReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{3}
}

func (x *GetInventoryReq) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

// 查询库存响应
type GetInventoryResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inventory     *Inventory             `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"` // 库存信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryResp) Reset() {
	*x = GetInventoryResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryResp) ProtoMessage() {}

func (x *GetInventoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryResp.ProtoReflect.Descriptor instead.
func (*GetInventoryResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{4}
}

func (x *GetInventoryResp) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

// 批量查询库存请求
type BatchGetInventoryReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkuIds        []string               `protobuf:"bytes,1,rep,name=sku_ids,json=skuIds,proto3" json:"sku_ids,omitempty"` // SKU ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetInventoryReq) Reset() {
	*x = BatchGetInventoryReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetInventoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetInventoryReq) ProtoMessage() {}

func (x *BatchGetInventoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetInventoryReq.ProtoReflect.Descriptor instead.
func (*BatchGetInventoryReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{5}
}

func (x *BatchGetInventoryReq) GetSkuIds() []string {
	if x != nil {
		return x.SkuIds
	}
	return nil
}

// 批量查询库存响应
type BatchGetInventoryResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inventories   []*Inventory           `protobuf:"bytes,1,rep,name=inventories,proto3" json:"inventories,omitempty"` // 库存信息列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetInventoryResp) Reset() {
	*x = BatchGetInventoryResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetInventoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetInventoryResp) ProtoMessage() {}

func (x *BatchGetInventoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetInventoryResp.ProtoReflect.Descriptor instead.
func (*BatchGetInventoryResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{6}
}

func (x *BatchGetInventoryResp) GetInventories() []*Inventory {
	if x != nil {
		return x.Inventories
	}
	return nil
}

// 更新库存请求
type UpdateInventoryReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkuId         string                 `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                                // SKU ID
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`                                      // 库存数量
	Type          InventoryChangeType    `protobuf:"varint,3,opt,name=type,proto3,enum=inventory.inventory.InventoryChangeType" json:"type,omitempty"` // 变动类型
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                                           // 变动原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInventoryReq) Reset() {
	*x = UpdateInventoryReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryReq) ProtoMessage() {}

func (x *UpdateInventoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryReq.ProtoReflect.Descriptor instead.
func (*UpdateInventoryReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateInventoryReq) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *UpdateInventoryReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateInventoryReq) GetType() InventoryChangeType {
	if x != nil {
		return x.Type
	}
	return InventoryChangeType_INVENTORY_CHANGE_TYPE_UNSPECIFIED
}

func (x *UpdateInventoryReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 更新库存响应
type UpdateInventoryResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inventory     *Inventory             `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"` // 更新后的库存信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInventoryResp) Reset() {
	*x = UpdateInventoryResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryResp) ProtoMessage() {}

func (x *UpdateInventoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryResp.ProtoReflect.Descriptor instead.
func (*UpdateInventoryResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateInventoryResp) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

// 预占库存请求
type ReserveInventoryReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	Items         []*ReserveItem         `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`                    // 预占商品列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveInventoryReq) Reset() {
	*x = ReserveInventoryReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveInventoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveInventoryReq) ProtoMessage() {}

func (x *ReserveInventoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveInventoryReq.ProtoReflect.Descriptor instead.
func (*ReserveInventoryReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{9}
}

func (x *ReserveInventoryReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ReserveInventoryReq) GetItems() []*ReserveItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 预占商品项
type ReserveItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkuId         string                 `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"` // SKU ID
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`       // 预占数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveItem) Reset() {
	*x = ReserveItem{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveItem) ProtoMessage() {}

func (x *ReserveItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveItem.ProtoReflect.Descriptor instead.
func (*ReserveItem) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{10}
}

func (x *ReserveItem) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *ReserveItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// 预占库存响应
type ReserveInventoryResp struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Success       bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`          // 预占结果
	Message       string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`           // 错误信息
	Reservations  []*InventoryReservation `protobuf:"bytes,3,rep,name=reservations,proto3" json:"reservations,omitempty"` // 预占记录
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveInventoryResp) Reset() {
	*x = ReserveInventoryResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveInventoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveInventoryResp) ProtoMessage() {}

func (x *ReserveInventoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveInventoryResp.ProtoReflect.Descriptor instead.
func (*ReserveInventoryResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{11}
}

func (x *ReserveInventoryResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReserveInventoryResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReserveInventoryResp) GetReservations() []*InventoryReservation {
	if x != nil {
		return x.Reservations
	}
	return nil
}

// 释放预占库存请求
type ReleaseReservedInventoryReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseReservedInventoryReq) Reset() {
	*x = ReleaseReservedInventoryReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseReservedInventoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseReservedInventoryReq) ProtoMessage() {}

func (x *ReleaseReservedInventoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseReservedInventoryReq.ProtoReflect.Descriptor instead.
func (*ReleaseReservedInventoryReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{12}
}

func (x *ReleaseReservedInventoryReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 释放预占库存响应
type ReleaseReservedInventoryResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 释放结果
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseReservedInventoryResp) Reset() {
	*x = ReleaseReservedInventoryResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseReservedInventoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseReservedInventoryResp) ProtoMessage() {}

func (x *ReleaseReservedInventoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseReservedInventoryResp.ProtoReflect.Descriptor instead.
func (*ReleaseReservedInventoryResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{13}
}

func (x *ReleaseReservedInventoryResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReleaseReservedInventoryResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 确认扣减库存请求
type ConfirmInventoryDeductionReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmInventoryDeductionReq) Reset() {
	*x = ConfirmInventoryDeductionReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmInventoryDeductionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmInventoryDeductionReq) ProtoMessage() {}

func (x *ConfirmInventoryDeductionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmInventoryDeductionReq.ProtoReflect.Descriptor instead.
func (*ConfirmInventoryDeductionReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{14}
}

func (x *ConfirmInventoryDeductionReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 确认扣减库存响应
type ConfirmInventoryDeductionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 确认结果
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmInventoryDeductionResp) Reset() {
	*x = ConfirmInventoryDeductionResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmInventoryDeductionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmInventoryDeductionResp) ProtoMessage() {}

func (x *ConfirmInventoryDeductionResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmInventoryDeductionResp.ProtoReflect.Descriptor instead.
func (*ConfirmInventoryDeductionResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{15}
}

func (x *ConfirmInventoryDeductionResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfirmInventoryDeductionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 查询库存日志请求
type GetInventoryLogsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkuId         string                 `protobuf:"bytes,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`           // SKU ID
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryLogsReq) Reset() {
	*x = GetInventoryLogsReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryLogsReq) ProtoMessage() {}

func (x *GetInventoryLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryLogsReq.ProtoReflect.Descriptor instead.
func (*GetInventoryLogsReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{16}
}

func (x *GetInventoryLogsReq) GetSkuId() string {
	if x != nil {
		return x.SkuId
	}
	return ""
}

func (x *GetInventoryLogsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetInventoryLogsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 查询库存日志响应
type GetInventoryLogsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*InventoryLog        `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`                          // 日志列表
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总数量
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryLogsResp) Reset() {
	*x = GetInventoryLogsResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryLogsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryLogsResp) ProtoMessage() {}

func (x *GetInventoryLogsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryLogsResp.ProtoReflect.Descriptor instead.
func (*GetInventoryLogsResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{17}
}

func (x *GetInventoryLogsResp) GetLogs() []*InventoryLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *GetInventoryLogsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetInventoryLogsResp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetInventoryLogsResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 检查库存充足性请求（内部RPC）
type CheckInventoryAvailabilityReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ReserveItem         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 检查的商品列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckInventoryAvailabilityReq) Reset() {
	*x = CheckInventoryAvailabilityReq{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckInventoryAvailabilityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInventoryAvailabilityReq) ProtoMessage() {}

func (x *CheckInventoryAvailabilityReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInventoryAvailabilityReq.ProtoReflect.Descriptor instead.
func (*CheckInventoryAvailabilityReq) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{18}
}

func (x *CheckInventoryAvailabilityReq) GetItems() []*ReserveItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 检查库存充足性响应（内部RPC）
type CheckInventoryAvailabilityResp struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Available        bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`                                      // 库存是否充足
	InsufficientSkus []string               `protobuf:"bytes,2,rep,name=insufficient_skus,json=insufficientSkus,proto3" json:"insufficient_skus,omitempty"` // 库存不足的SKU列表
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CheckInventoryAvailabilityResp) Reset() {
	*x = CheckInventoryAvailabilityResp{}
	mi := &file_proto_inventory_inventory_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckInventoryAvailabilityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInventoryAvailabilityResp) ProtoMessage() {}

func (x *CheckInventoryAvailabilityResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inventory_inventory_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInventoryAvailabilityResp.ProtoReflect.Descriptor instead.
func (*CheckInventoryAvailabilityResp) Descriptor() ([]byte, []int) {
	return file_proto_inventory_inventory_proto_rawDescGZIP(), []int{19}
}

func (x *CheckInventoryAvailabilityResp) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *CheckInventoryAvailabilityResp) GetInsufficientSkus() []string {
	if x != nil {
		return x.InsufficientSkus
	}
	return nil
}

var File_proto_inventory_inventory_proto protoreflect.FileDescriptor

const file_proto_inventory_inventory_proto_rawDesc = "" +
	"\n" +
	"\x1fproto/inventory/inventory.proto\x12\x13inventory.inventory\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x87\x02\n" +
	"\tInventory\x12\x15\n" +
	"\x06sku_id\x18\x01 \x01(\tR\x05skuId\x12-\n" +
	"\x12available_quantity\x18\x02 \x01(\x05R\x11availableQuantity\x12+\n" +
	"\x11reserved_quantity\x18\x03 \x01(\x05R\x10reservedQuantity\x12%\n" +
	"\x0etotal_quantity\x18\x04 \x01(\x05R\rtotalQuantity\x12%\n" +
	"\x0ealert_quantity\x18\x05 \x01(\x05R\ralertQuantity\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xcd\x02\n" +
	"\fInventoryLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x15\n" +
	"\x06sku_id\x18\x02 \x01(\tR\x05skuId\x12<\n" +
	"\x04type\x18\x03 \x01(\x0e2(.inventory.inventory.InventoryChangeTypeR\x04type\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12'\n" +
	"\x0fbefore_quantity\x18\x05 \x01(\x05R\x0ebeforeQuantity\x12%\n" +
	"\x0eafter_quantity\x18\x06 \x01(\x05R\rafterQuantity\x12\x16\n" +
	"\x06reason\x18\a \x01(\tR\x06reason\x12\x19\n" +
	"\border_id\x18\b \x01(\tR\aorderId\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x82\x02\n" +
	"\x14InventoryReservation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x15\n" +
	"\x06sku_id\x18\x02 \x01(\tR\x05skuId\x12\x19\n" +
	"\border_id\x18\x03 \x01(\tR\aorderId\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"(\n" +
	"\x0fGetInventoryReq\x12\x15\n" +
	"\x06sku_id\x18\x01 \x01(\tR\x05skuId\"P\n" +
	"\x10GetInventoryResp\x12<\n" +
	"\tinventory\x18\x01 \x01(\v2\x1e.inventory.inventory.InventoryR\tinventory\"/\n" +
	"\x14BatchGetInventoryReq\x12\x17\n" +
	"\asku_ids\x18\x01 \x03(\tR\x06skuIds\"Y\n" +
	"\x15BatchGetInventoryResp\x12@\n" +
	"\vinventories\x18\x01 \x03(\v2\x1e.inventory.inventory.InventoryR\vinventories\"\x9d\x01\n" +
	"\x12UpdateInventoryReq\x12\x15\n" +
	"\x06sku_id\x18\x01 \x01(\tR\x05skuId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\x12<\n" +
	"\x04type\x18\x03 \x01(\x0e2(.inventory.inventory.InventoryChangeTypeR\x04type\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"S\n" +
	"\x13UpdateInventoryResp\x12<\n" +
	"\tinventory\x18\x01 \x01(\v2\x1e.inventory.inventory.InventoryR\tinventory\"h\n" +
	"\x13ReserveInventoryReq\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x126\n" +
	"\x05items\x18\x02 \x03(\v2 .inventory.inventory.ReserveItemR\x05items\"@\n" +
	"\vReserveItem\x12\x15\n" +
	"\x06sku_id\x18\x01 \x01(\tR\x05skuId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\"\x99\x01\n" +
	"\x14ReserveInventoryResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12M\n" +
	"\freservations\x18\x03 \x03(\v2).inventory.inventory.InventoryReservationR\freservations\"8\n" +
	"\x1bReleaseReservedInventoryReq\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"R\n" +
	"\x1cReleaseReservedInventoryResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"9\n" +
	"\x1cConfirmInventoryDeductionReq\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"S\n" +
	"\x1dConfirmInventoryDeductionResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"]\n" +
	"\x13GetInventoryLogsReq\x12\x15\n" +
	"\x06sku_id\x18\x01 \x01(\tR\x05skuId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"\x94\x01\n" +
	"\x14GetInventoryLogsResp\x125\n" +
	"\x04logs\x18\x01 \x03(\v2!.inventory.inventory.InventoryLogR\x04logs\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"W\n" +
	"\x1dCheckInventoryAvailabilityReq\x126\n" +
	"\x05items\x18\x01 \x03(\v2 .inventory.inventory.ReserveItemR\x05items\"k\n" +
	"\x1eCheckInventoryAvailabilityResp\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12+\n" +
	"\x11insufficient_skus\x18\x02 \x03(\tR\x10insufficientSkus*\xe1\x01\n" +
	"\x13InventoryChangeType\x12%\n" +
	"!INVENTORY_CHANGE_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18INVENTORY_CHANGE_TYPE_IN\x10\x01\x12\x1d\n" +
	"\x19INVENTORY_CHANGE_TYPE_OUT\x10\x02\x12!\n" +
	"\x1dINVENTORY_CHANGE_TYPE_RESERVE\x10\x03\x12!\n" +
	"\x1dINVENTORY_CHANGE_TYPE_RELEASE\x10\x04\x12 \n" +
	"\x1cINVENTORY_CHANGE_TYPE_ADJUST\x10\x052\xa0\f\n" +
	"\x10InventoryService\x12\xb0\x01\n" +
	"\fGetInventory\x12$.inventory.inventory.GetInventoryReq\x1a%.inventory.inventory.GetInventoryResp\"S\x92A.\x12\f查询库存\x1a\x1e根据SKU ID查询库存信息\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/inventory/{sku_id}\x12\xcb\x01\n" +
	"\x11BatchGetInventory\x12).inventory.inventory.BatchGetInventoryReq\x1a*.inventory.inventory.BatchGetInventoryResp\"_\x92A:\x12\x12批量查询库存\x1a$批量查询多个SKU的库存信息\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/api/v1/inventory/batch\x12\xb6\x01\n" +
	"\x0fUpdateInventory\x12'.inventory.inventory.UpdateInventoryReq\x1a(.inventory.inventory.UpdateInventoryResp\"P\x92A(\x12\f更新库存\x1a\x18更新SKU的库存数量\x82\xd3\xe4\x93\x02\x1f:\x01*\x1a\x1a/api/v1/inventory/{sku_id}\x12\xc4\x01\n" +
	"\x10ReserveInventory\x12(.inventory.inventory.ReserveInventoryReq\x1a).inventory.inventory.ReserveInventoryResp\"[\x92A4\x12\f预占库存\x1a$为订单预占库存，防止超卖\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/api/v1/inventory/reserve\x12\xd9\x01\n" +
	"\x18ReleaseReservedInventory\x120.inventory.inventory.ReleaseReservedInventoryReq\x1a1.inventory.inventory.ReleaseReservedInventoryResp\"X\x92A1\x12\x12释放预占库存\x1a\x1b释放订单的预占库存\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/api/v1/inventory/release\x12\xdc\x01\n" +
	"\x19ConfirmInventoryDeduction\x121.inventory.inventory.ConfirmInventoryDeductionReq\x1a2.inventory.inventory.ConfirmInventoryDeductionResp\"X\x92A1\x12\x12确认扣减库存\x1a\x1b确认扣减预占的库存\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/api/v1/inventory/confirm\x12\xc7\x01\n" +
	"\x10GetInventoryLogs\x12(.inventory.inventory.GetInventoryLogsReq\x1a).inventory.inventory.GetInventoryLogsResp\"^\x92A4\x12\x12库存变动日志\x1a\x1e查询SKU的库存变动历史\x82\xd3\xe4\x93\x02!\x12\x1f/api/v1/inventory/{sku_id}/logs\x12\x85\x01\n" +
	"\x1aCheckInventoryAvailability\x122.inventory.inventory.CheckInventoryAvailabilityReq\x1a3.inventory.inventory.CheckInventoryAvailabilityRespB\xe4\x01\n" +
	"\x17com.inventory.inventoryB\x0eInventoryProtoP\x01ZLgithub.com/people257/poor-guy-shop/payment-service/gen/proto/proto/inventory\xa2\x02\x03IIX\xaa\x02\x13Inventory.Inventory\xca\x02\x13Inventory\\Inventory\xe2\x02\x1fInventory\\Inventory\\GPBMetadata\xea\x02\x14Inventory::Inventoryb\x06proto3"

var (
	file_proto_inventory_inventory_proto_rawDescOnce sync.Once
	file_proto_inventory_inventory_proto_rawDescData []byte
)

func file_proto_inventory_inventory_proto_rawDescGZIP() []byte {
	file_proto_inventory_inventory_proto_rawDescOnce.Do(func() {
		file_proto_inventory_inventory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_inventory_inventory_proto_rawDesc), len(file_proto_inventory_inventory_proto_rawDesc)))
	})
	return file_proto_inventory_inventory_proto_rawDescData
}

var file_proto_inventory_inventory_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_inventory_inventory_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_proto_inventory_inventory_proto_goTypes = []any{
	(InventoryChangeType)(0),               // 0: inventory.inventory.InventoryChangeType
	(*Inventory)(nil),                      // 1: inventory.inventory.Inventory
	(*InventoryLog)(nil),                   // 2: inventory.inventory.InventoryLog
	(*InventoryReservation)(nil),           // 3: inventory.inventory.InventoryReservation
	(*GetInventoryReq)(nil),                // 4: inventory.inventory.GetInventoryReq
	(*GetInventoryResp)(nil),               // 5: inventory.inventory.GetInventoryResp
	(*BatchGetInventoryReq)(nil),           // 6: inventory.inventory.BatchGetInventoryReq
	(*BatchGetInventoryResp)(nil),          // 7: inventory.inventory.BatchGetInventoryResp
	(*UpdateInventoryReq)(nil),             // 8: inventory.inventory.UpdateInventoryReq
	(*UpdateInventoryResp)(nil),            // 9: inventory.inventory.UpdateInventoryResp
	(*ReserveInventoryReq)(nil),            // 10: inventory.inventory.ReserveInventoryReq
	(*ReserveItem)(nil),                    // 11: inventory.inventory.ReserveItem
	(*ReserveInventoryResp)(nil),           // 12: inventory.inventory.ReserveInventoryResp
	(*ReleaseReservedInventoryReq)(nil),    // 13: inventory.inventory.ReleaseReservedInventoryReq
	(*ReleaseReservedInventoryResp)(nil),   // 14: inventory.inventory.ReleaseReservedInventoryResp
	(*ConfirmInventoryDeductionReq)(nil),   // 15: inventory.inventory.ConfirmInventoryDeductionReq
	(*ConfirmInventoryDeductionResp)(nil),  // 16: inventory.inventory.ConfirmInventoryDeductionResp
	(*GetInventoryLogsReq)(nil),            // 17: inventory.inventory.GetInventoryLogsReq
	(*GetInventoryLogsResp)(nil),           // 18: inventory.inventory.GetInventoryLogsResp
	(*CheckInventoryAvailabilityReq)(nil),  // 19: inventory.inventory.CheckInventoryAvailabilityReq
	(*CheckInventoryAvailabilityResp)(nil), // 20: inventory.inventory.CheckInventoryAvailabilityResp
	(*timestamppb.Timestamp)(nil),          // 21: google.protobuf.Timestamp
}
var file_proto_inventory_inventory_proto_depIdxs = []int32{
	21, // 0: inventory.inventory.Inventory.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 1: inventory.inventory.InventoryLog.type:type_name -> inventory.inventory.InventoryChangeType
	21, // 2: inventory.inventory.InventoryLog.created_at:type_name -> google.protobuf.Timestamp
	21, // 3: inventory.inventory.InventoryReservation.created_at:type_name -> google.protobuf.Timestamp
	21, // 4: inventory.inventory.InventoryReservation.expires_at:type_name -> google.protobuf.Timestamp
	1,  // 5: inventory.inventory.GetInventoryResp.inventory:type_name -> inventory.inventory.Inventory
	1,  // 6: inventory.inventory.BatchGetInventoryResp.inventories:type_name -> inventory.inventory.Inventory
	0,  // 7: inventory.inventory.UpdateInventoryReq.type:type_name -> inventory.inventory.InventoryChangeType
	1,  // 8: inventory.inventory.UpdateInventoryResp.inventory:type_name -> inventory.inventory.Inventory
	11, // 9: inventory.inventory.ReserveInventoryReq.items:type_name -> inventory.inventory.ReserveItem
	3,  // 10: inventory.inventory.ReserveInventoryResp.reservations:type_name -> inventory.inventory.InventoryReservation
	2,  // 11: inventory.inventory.GetInventoryLogsResp.logs:type_name -> inventory.inventory.InventoryLog
	11, // 12: inventory.inventory.CheckInventoryAvailabilityReq.items:type_name -> inventory.inventory.ReserveItem
	4,  // 13: inventory.inventory.InventoryService.GetInventory:input_type -> inventory.inventory.GetInventoryReq
	6,  // 14: inventory.inventory.InventoryService.BatchGetInventory:input_type -> inventory.inventory.BatchGetInventoryReq
	8,  // 15: inventory.inventory.InventoryService.UpdateInventory:input_type -> inventory.inventory.UpdateInventoryReq
	10, // 16: inventory.inventory.InventoryService.ReserveInventory:input_type -> inventory.inventory.ReserveInventoryReq
	13, // 17: inventory.inventory.InventoryService.ReleaseReservedInventory:input_type -> inventory.inventory.ReleaseReservedInventoryReq
	15, // 18: inventory.inventory.InventoryService.ConfirmInventoryDeduction:input_type -> inventory.inventory.ConfirmInventoryDeductionReq
	17, // 19: inventory.inventory.InventoryService.GetInventoryLogs:input_type -> inventory.inventory.GetInventoryLogsReq
	19, // 20: inventory.inventory.InventoryService.CheckInventoryAvailability:input_type -> inventory.inventory.CheckInventoryAvailabilityReq
	5,  // 21: inventory.inventory.InventoryService.GetInventory:output_type -> inventory.inventory.GetInventoryResp
	7,  // 22: inventory.inventory.InventoryService.BatchGetInventory:output_type -> inventory.inventory.BatchGetInventoryResp
	9,  // 23: inventory.inventory.InventoryService.UpdateInventory:output_type -> inventory.inventory.UpdateInventoryResp
	12, // 24: inventory.inventory.InventoryService.ReserveInventory:output_type -> inventory.inventory.ReserveInventoryResp
	14, // 25: inventory.inventory.InventoryService.ReleaseReservedInventory:output_type -> inventory.inventory.ReleaseReservedInventoryResp
	16, // 26: inventory.inventory.InventoryService.ConfirmInventoryDeduction:output_type -> inventory.inventory.ConfirmInventoryDeductionResp
	18, // 27: inventory.inventory.InventoryService.GetInventoryLogs:output_type -> inventory.inventory.GetInventoryLogsResp
	20, // 28: inventory.inventory.InventoryService.CheckInventoryAvailability:output_type -> inventory.inventory.CheckInventoryAvailabilityResp
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_inventory_inventory_proto_init() }
func file_proto_inventory_inventory_proto_init() {
	if File_proto_inventory_inventory_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_inventory_inventory_proto_rawDesc), len(file_proto_inventory_inventory_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_inventory_inventory_proto_goTypes,
		DependencyIndexes: file_proto_inventory_inventory_proto_depIdxs,
		EnumInfos:         file_proto_inventory_inventory_proto_enumTypes,
		MessageInfos:      file_proto_inventory_inventory_proto_msgTypes,
	}.Build()
	File_proto_inventory_inventory_proto = out.File
	file_proto_inventory_inventory_proto_goTypes = nil
	file_proto_inventory_inventory_proto_depIdxs = nil
}
