// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameUserOauthBinding = "user_oauth_bindings"

// UserOauthBinding mapped from table <user_oauth_bindings>
type UserOauthBinding struct {
	ID        string    `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:绑定关系ID, 主键" json:"id"`                                  // 绑定关系ID, 主键
	UserID    string    `gorm:"column:user_id;type:uuid;not null;comment:外键, 关联到用户表ID" json:"user_id"`                                                  // 外键, 关联到用户表ID
	Provider  string    `gorm:"column:provider;type:character varying(20);not null;comment:第三方登录提供商 (例如: 'qq', 'github', 'wechat')" json:"provider"`    // 第三方登录提供商 (例如: 'qq', 'github', 'wechat')
	Openid    string    `gorm:"column:openid;type:text;not null;comment:第三方平台的用户唯一标识 (对provider唯一)" json:"openid"`                                      // 第三方平台的用户唯一标识 (对provider唯一)
	Unionid   *string   `gorm:"column:unionid;type:text;comment:微信开放平台 UnionID (如果使用微信登录)" json:"unionid"`                                              // 微信开放平台 UnionID (如果使用微信登录)
	Nickname  *string   `gorm:"column:nickname;type:text;comment:从第三方平台获取的用户昵称 (缓存)" json:"nickname"`                                                   // 从第三方平台获取的用户昵称 (缓存)
	AvatarURL *string   `gorm:"column:avatar_url;type:text;comment:从第三方平台获取的用户头像URL (缓存)" json:"avatar_url"`                                            // 从第三方平台获取的用户头像URL (缓存)
	CreatedAt time.Time `gorm:"column:created_at;type:timestamp with time zone;not null;default:now();autoCreateTime;comment:创建时间" json:"created_at"`   // 创建时间
	UpdatedAt time.Time `gorm:"column:updated_at;type:timestamp with time zone;not null;default:now();autoUpdateTime;comment:最后更新时间" json:"updated_at"` // 最后更新时间
}

// TableName UserOauthBinding's table name
func (*UserOauthBinding) TableName() string {
	return TableNameUserOauthBinding
}
