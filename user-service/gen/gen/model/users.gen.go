// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameUser = "users"

// User mapped from table <users>
type User struct {
	ID           string    `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:用户ID, 主键" json:"id"`                                    // 用户ID, 主键
	Username     string    `gorm:"column:username;type:character varying(50);not null;comment:用户名, 唯一" json:"username"`                                    // 用户名, 唯一
	PasswordHash *string   `gorm:"column:password_hash;type:character varying(255);comment:加密后的密码, 第三方登录可为空" json:"password_hash"`                         // 加密后的密码, 第三方登录可为空
	PhoneNumber  *string   `gorm:"column:phone_number;type:character varying(20);comment:手机号, 唯一" json:"phone_number"`                                     // 手机号, 唯一
	Email        *string   `gorm:"column:email;type:character varying(255);comment:邮箱, 唯一" json:"email"`                                                   // 邮箱, 唯一
	AvatarURL    *string   `gorm:"column:avatar_url;type:text;comment:用户头像URL" json:"avatar_url"`                                                          // 用户头像URL
	Status       int16     `gorm:"column:status;type:smallint;not null;default:1;comment:用户状态: 1=正常, 2=已禁用" json:"status"`                                 // 用户状态: 1=正常, 2=已禁用
	CreatedAt    time.Time `gorm:"column:created_at;type:timestamp with time zone;not null;default:now();autoCreateTime;comment:创建时间" json:"created_at"`   // 创建时间
	UpdatedAt    time.Time `gorm:"column:updated_at;type:timestamp with time zone;not null;default:now();autoUpdateTime;comment:最后更新时间" json:"updated_at"` // 最后更新时间
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}
