syntax = "proto3";

package product.brand;

option go_package = "github.com/people257/poor-guy-shop/product-service/gen/proto/product/brand";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// 品牌服务
service BrandService {
  // 创建品牌
  rpc CreateBrand(CreateBrandReq) returns (CreateBrandResp) {
    option (google.api.http) = {
      post: "/api/v1/brands"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "创建品牌";
      description: "创建新的商品品牌";
    };
  }

  // 更新品牌
  rpc UpdateBrand(UpdateBrandReq) returns (UpdateBrandResp) {
    option (google.api.http) = {
      put: "/api/v1/brands/{id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "更新品牌";
      description: "更新品牌信息";
    };
  }

  // 删除品牌
  rpc DeleteBrand(DeleteBrandReq) returns (DeleteBrandResp) {
    option (google.api.http) = {
      delete: "/api/v1/brands/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "删除品牌";
      description: "删除品牌";
    };
  }

  // 获取品牌详情
  rpc GetBrand(GetBrandReq) returns (GetBrandResp) {
    option (google.api.http) = {
      get: "/api/v1/brands/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "获取品牌详情";
      description: "根据ID获取品牌详情";
    };
  }

  // 获取品牌列表
  rpc ListBrands(ListBrandsReq) returns (ListBrandsResp) {
    option (google.api.http) = {
      get: "/api/v1/brands"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "获取品牌列表";
      description: "获取品牌列表，支持分页和筛选";
    };
  }
}

// 品牌信息
message Brand {
  string id = 1;
  string name = 2;
  string slug = 3;
  string description = 4;
  string logo_url = 5;
  string website_url = 6;
  int32 sort_order = 7;
  bool is_active = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

// 创建品牌请求
message CreateBrandReq {
  string name = 1;
  string slug = 2;
  string description = 3;
  string logo_url = 4;
  string website_url = 5;
  int32 sort_order = 6;
}

// 创建品牌响应
message CreateBrandResp {
  Brand brand = 1;
}

// 更新品牌请求
message UpdateBrandReq {
  string id = 1;
  string name = 2;
  string slug = 3;
  string description = 4;
  string logo_url = 5;
  string website_url = 6;
  int32 sort_order = 7;
  bool is_active = 8;
}

// 更新品牌响应
message UpdateBrandResp {
  Brand brand = 1;
}

// 删除品牌请求
message DeleteBrandReq {
  string id = 1;
}

// 删除品牌响应
message DeleteBrandResp {
  bool success = 1;
}

// 获取品牌详情请求
message GetBrandReq {
  string id = 1;
}

// 获取品牌详情响应
message GetBrandResp {
  Brand brand = 1;
}

// 获取品牌列表请求
message ListBrandsReq {
  int32 page = 1;
  int32 page_size = 2;
  bool is_active = 3;
  string keyword = 4;
  string sort_by = 5;
  string sort_order = 6;
}

// 获取品牌列表响应
message ListBrandsResp {
  repeated Brand brands = 1;
  int64 total = 2;
  int32 page = 3;
  int32 page_size = 4;
}
