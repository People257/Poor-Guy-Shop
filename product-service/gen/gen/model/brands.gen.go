// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameBrand = "brands"

// Brand mapped from table <brands>
type Brand struct {
	ID          string    `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:品牌ID" json:"id"`                                      // 品牌ID
	Name        string    `gorm:"column:name;type:character varying(100);not null;comment:品牌名称" json:"name"`                                            // 品牌名称
	Slug        string    `gorm:"column:slug;type:character varying(100);not null;comment:URL友好的品牌标识" json:"slug"`                                      // URL友好的品牌标识
	Description *string   `gorm:"column:description;type:text;comment:品牌描述" json:"description"`                                                         // 品牌描述
	LogoURL     *string   `gorm:"column:logo_url;type:text;comment:品牌Logo URL" json:"logo_url"`                                                         // 品牌Logo URL
	WebsiteURL  *string   `gorm:"column:website_url;type:text;comment:品牌官网" json:"website_url"`                                                         // 品牌官网
	Country     *string   `gorm:"column:country;type:character varying(100);comment:品牌国家" json:"country"`                                               // 品牌国家
	IsActive    bool      `gorm:"column:is_active;type:boolean;not null;default:true;comment:是否启用" json:"is_active"`                                    // 是否启用
	SortOrder   int32     `gorm:"column:sort_order;type:integer;not null;comment:排序权重" json:"sort_order"`                                               // 排序权重
	CreatedAt   time.Time `gorm:"column:created_at;type:timestamp with time zone;not null;default:now();autoCreateTime;comment:创建时间" json:"created_at"` // 创建时间
	UpdatedAt   time.Time `gorm:"column:updated_at;type:timestamp with time zone;not null;default:now();autoUpdateTime;comment:更新时间" json:"updated_at"` // 更新时间
}

// TableName Brand's table name
func (*Brand) TableName() string {
	return TableNameBrand
}
