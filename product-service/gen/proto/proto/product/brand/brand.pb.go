// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: proto/product/brand/brand.proto

package brand

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 品牌信息
type Brand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LogoUrl       string                 `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	WebsiteUrl    string                 `protobuf:"bytes,6,opt,name=website_url,json=websiteUrl,proto3" json:"website_url,omitempty"`
	SortOrder     int32                  `protobuf:"varint,7,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	IsActive      bool                   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Brand) Reset() {
	*x = Brand{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{0}
}

func (x *Brand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Brand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brand) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Brand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Brand) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Brand) GetWebsiteUrl() string {
	if x != nil {
		return x.WebsiteUrl
	}
	return ""
}

func (x *Brand) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *Brand) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Brand) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Brand) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 创建品牌请求
type CreateBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	LogoUrl       string                 `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	WebsiteUrl    string                 `protobuf:"bytes,5,opt,name=website_url,json=websiteUrl,proto3" json:"website_url,omitempty"`
	SortOrder     int32                  `protobuf:"varint,6,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBrandReq) Reset() {
	*x = CreateBrandReq{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrandReq) ProtoMessage() {}

func (x *CreateBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrandReq.ProtoReflect.Descriptor instead.
func (*CreateBrandReq) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBrandReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBrandReq) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CreateBrandReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateBrandReq) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *CreateBrandReq) GetWebsiteUrl() string {
	if x != nil {
		return x.WebsiteUrl
	}
	return ""
}

func (x *CreateBrandReq) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

// 创建品牌响应
type CreateBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         *Brand                 `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBrandResp) Reset() {
	*x = CreateBrandResp{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBrandResp) ProtoMessage() {}

func (x *CreateBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBrandResp.ProtoReflect.Descriptor instead.
func (*CreateBrandResp) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBrandResp) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

// 更新品牌请求
type UpdateBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LogoUrl       string                 `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	WebsiteUrl    string                 `protobuf:"bytes,6,opt,name=website_url,json=websiteUrl,proto3" json:"website_url,omitempty"`
	SortOrder     int32                  `protobuf:"varint,7,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	IsActive      bool                   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBrandReq) Reset() {
	*x = UpdateBrandReq{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandReq) ProtoMessage() {}

func (x *UpdateBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandReq.ProtoReflect.Descriptor instead.
func (*UpdateBrandReq) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateBrandReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBrandReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBrandReq) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *UpdateBrandReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateBrandReq) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *UpdateBrandReq) GetWebsiteUrl() string {
	if x != nil {
		return x.WebsiteUrl
	}
	return ""
}

func (x *UpdateBrandReq) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *UpdateBrandReq) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// 更新品牌响应
type UpdateBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         *Brand                 `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBrandResp) Reset() {
	*x = UpdateBrandResp{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandResp) ProtoMessage() {}

func (x *UpdateBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandResp.ProtoReflect.Descriptor instead.
func (*UpdateBrandResp) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateBrandResp) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

// 删除品牌请求
type DeleteBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBrandReq) Reset() {
	*x = DeleteBrandReq{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandReq) ProtoMessage() {}

func (x *DeleteBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandReq.ProtoReflect.Descriptor instead.
func (*DeleteBrandReq) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteBrandReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 删除品牌响应
type DeleteBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBrandResp) Reset() {
	*x = DeleteBrandResp{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandResp) ProtoMessage() {}

func (x *DeleteBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandResp.ProtoReflect.Descriptor instead.
func (*DeleteBrandResp) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteBrandResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 获取品牌详情请求
type GetBrandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBrandReq) Reset() {
	*x = GetBrandReq{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBrandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandReq) ProtoMessage() {}

func (x *GetBrandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandReq.ProtoReflect.Descriptor instead.
func (*GetBrandReq) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{7}
}

func (x *GetBrandReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 获取品牌详情响应
type GetBrandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         *Brand                 `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBrandResp) Reset() {
	*x = GetBrandResp{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBrandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandResp) ProtoMessage() {}

func (x *GetBrandResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandResp.ProtoReflect.Descriptor instead.
func (*GetBrandResp) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{8}
}

func (x *GetBrandResp) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

// 获取品牌列表请求
type ListBrandsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	IsActive      bool                   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Keyword       string                 `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	SortBy        string                 `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder     string                 `protobuf:"bytes,6,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBrandsReq) Reset() {
	*x = ListBrandsReq{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBrandsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBrandsReq) ProtoMessage() {}

func (x *ListBrandsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBrandsReq.ProtoReflect.Descriptor instead.
func (*ListBrandsReq) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{9}
}

func (x *ListBrandsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBrandsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListBrandsReq) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ListBrandsReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListBrandsReq) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListBrandsReq) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

// 获取品牌列表响应
type ListBrandsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brands        []*Brand               `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBrandsResp) Reset() {
	*x = ListBrandsResp{}
	mi := &file_proto_product_brand_brand_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBrandsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBrandsResp) ProtoMessage() {}

func (x *ListBrandsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_product_brand_brand_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBrandsResp.ProtoReflect.Descriptor instead.
func (*ListBrandsResp) Descriptor() ([]byte, []int) {
	return file_proto_product_brand_brand_proto_rawDescGZIP(), []int{10}
}

func (x *ListBrandsResp) GetBrands() []*Brand {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *ListBrandsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListBrandsResp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBrandsResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_proto_product_brand_brand_proto protoreflect.FileDescriptor

const file_proto_product_brand_brand_proto_rawDesc = "" +
	"\n" +
	"\x1fproto/product/brand/brand.proto\x12\rproduct.brand\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xcf\x02\n" +
	"\x05Brand\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x19\n" +
	"\blogo_url\x18\x05 \x01(\tR\alogoUrl\x12\x1f\n" +
	"\vwebsite_url\x18\x06 \x01(\tR\n" +
	"websiteUrl\x12\x1d\n" +
	"\n" +
	"sort_order\x18\a \x01(\x05R\tsortOrder\x12\x1b\n" +
	"\tis_active\x18\b \x01(\bR\bisActive\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xb5\x01\n" +
	"\x0eCreateBrandReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x02 \x01(\tR\x04slug\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x19\n" +
	"\blogo_url\x18\x04 \x01(\tR\alogoUrl\x12\x1f\n" +
	"\vwebsite_url\x18\x05 \x01(\tR\n" +
	"websiteUrl\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x06 \x01(\x05R\tsortOrder\"=\n" +
	"\x0fCreateBrandResp\x12*\n" +
	"\x05brand\x18\x01 \x01(\v2\x14.product.brand.BrandR\x05brand\"\xe2\x01\n" +
	"\x0eUpdateBrandReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x19\n" +
	"\blogo_url\x18\x05 \x01(\tR\alogoUrl\x12\x1f\n" +
	"\vwebsite_url\x18\x06 \x01(\tR\n" +
	"websiteUrl\x12\x1d\n" +
	"\n" +
	"sort_order\x18\a \x01(\x05R\tsortOrder\x12\x1b\n" +
	"\tis_active\x18\b \x01(\bR\bisActive\"=\n" +
	"\x0fUpdateBrandResp\x12*\n" +
	"\x05brand\x18\x01 \x01(\v2\x14.product.brand.BrandR\x05brand\" \n" +
	"\x0eDeleteBrandReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"+\n" +
	"\x0fDeleteBrandResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x1d\n" +
	"\vGetBrandReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\":\n" +
	"\fGetBrandResp\x12*\n" +
	"\x05brand\x18\x01 \x01(\v2\x14.product.brand.BrandR\x05brand\"\xaf\x01\n" +
	"\rListBrandsReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1b\n" +
	"\tis_active\x18\x03 \x01(\bR\bisActive\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x17\n" +
	"\asort_by\x18\x05 \x01(\tR\x06sortBy\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x06 \x01(\tR\tsortOrder\"\x85\x01\n" +
	"\x0eListBrandsResp\x12,\n" +
	"\x06brands\x18\x01 \x03(\v2\x14.product.brand.BrandR\x06brands\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize2\xff\x05\n" +
	"\fBrandService\x12\x92\x01\n" +
	"\vCreateBrand\x12\x1d.product.brand.CreateBrandReq\x1a\x1e.product.brand.CreateBrandResp\"D\x92A(\x12\f创建品牌\x1a\x18创建新的商品品牌\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/api/v1/brands\x12\x91\x01\n" +
	"\vUpdateBrand\x12\x1d.product.brand.UpdateBrandReq\x1a\x1e.product.brand.UpdateBrandResp\"C\x92A\"\x12\f更新品牌\x1a\x12更新品牌信息\x82\xd3\xe4\x93\x02\x18:\x01*\x1a\x13/api/v1/brands/{id}\x12\x88\x01\n" +
	"\vDeleteBrand\x12\x1d.product.brand.DeleteBrandReq\x1a\x1e.product.brand.DeleteBrandResp\":\x92A\x1c\x12\f删除品牌\x1a\f删除品牌\x82\xd3\xe4\x93\x02\x15*\x13/api/v1/brands/{id}\x12\x93\x01\n" +
	"\bGetBrand\x12\x1a.product.brand.GetBrandReq\x1a\x1b.product.brand.GetBrandResp\"N\x92A0\x12\x12获取品牌详情\x1a\x1a根据ID获取品牌详情\x82\xd3\xe4\x93\x02\x15\x12\x13/api/v1/brands/{id}\x12\xa4\x01\n" +
	"\n" +
	"ListBrands\x12\x1c.product.brand.ListBrandsReq\x1a\x1d.product.brand.ListBrandsResp\"Y\x92A@\x12\x12获取品牌列表\x1a*获取品牌列表，支持分页和筛选\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/v1/brandsBLZJgithub.com/people257/poor-guy-shop/product-service/gen/proto/product/brandb\x06proto3"

var (
	file_proto_product_brand_brand_proto_rawDescOnce sync.Once
	file_proto_product_brand_brand_proto_rawDescData []byte
)

func file_proto_product_brand_brand_proto_rawDescGZIP() []byte {
	file_proto_product_brand_brand_proto_rawDescOnce.Do(func() {
		file_proto_product_brand_brand_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_product_brand_brand_proto_rawDesc), len(file_proto_product_brand_brand_proto_rawDesc)))
	})
	return file_proto_product_brand_brand_proto_rawDescData
}

var file_proto_product_brand_brand_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_product_brand_brand_proto_goTypes = []any{
	(*Brand)(nil),                 // 0: product.brand.Brand
	(*CreateBrandReq)(nil),        // 1: product.brand.CreateBrandReq
	(*CreateBrandResp)(nil),       // 2: product.brand.CreateBrandResp
	(*UpdateBrandReq)(nil),        // 3: product.brand.UpdateBrandReq
	(*UpdateBrandResp)(nil),       // 4: product.brand.UpdateBrandResp
	(*DeleteBrandReq)(nil),        // 5: product.brand.DeleteBrandReq
	(*DeleteBrandResp)(nil),       // 6: product.brand.DeleteBrandResp
	(*GetBrandReq)(nil),           // 7: product.brand.GetBrandReq
	(*GetBrandResp)(nil),          // 8: product.brand.GetBrandResp
	(*ListBrandsReq)(nil),         // 9: product.brand.ListBrandsReq
	(*ListBrandsResp)(nil),        // 10: product.brand.ListBrandsResp
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_proto_product_brand_brand_proto_depIdxs = []int32{
	11, // 0: product.brand.Brand.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: product.brand.Brand.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: product.brand.CreateBrandResp.brand:type_name -> product.brand.Brand
	0,  // 3: product.brand.UpdateBrandResp.brand:type_name -> product.brand.Brand
	0,  // 4: product.brand.GetBrandResp.brand:type_name -> product.brand.Brand
	0,  // 5: product.brand.ListBrandsResp.brands:type_name -> product.brand.Brand
	1,  // 6: product.brand.BrandService.CreateBrand:input_type -> product.brand.CreateBrandReq
	3,  // 7: product.brand.BrandService.UpdateBrand:input_type -> product.brand.UpdateBrandReq
	5,  // 8: product.brand.BrandService.DeleteBrand:input_type -> product.brand.DeleteBrandReq
	7,  // 9: product.brand.BrandService.GetBrand:input_type -> product.brand.GetBrandReq
	9,  // 10: product.brand.BrandService.ListBrands:input_type -> product.brand.ListBrandsReq
	2,  // 11: product.brand.BrandService.CreateBrand:output_type -> product.brand.CreateBrandResp
	4,  // 12: product.brand.BrandService.UpdateBrand:output_type -> product.brand.UpdateBrandResp
	6,  // 13: product.brand.BrandService.DeleteBrand:output_type -> product.brand.DeleteBrandResp
	8,  // 14: product.brand.BrandService.GetBrand:output_type -> product.brand.GetBrandResp
	10, // 15: product.brand.BrandService.ListBrands:output_type -> product.brand.ListBrandsResp
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_product_brand_brand_proto_init() }
func file_proto_product_brand_brand_proto_init() {
	if File_proto_product_brand_brand_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_product_brand_brand_proto_rawDesc), len(file_proto_product_brand_brand_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_product_brand_brand_proto_goTypes,
		DependencyIndexes: file_proto_product_brand_brand_proto_depIdxs,
		MessageInfos:      file_proto_product_brand_brand_proto_msgTypes,
	}.Build()
	File_proto_product_brand_brand_proto = out.File
	file_proto_product_brand_brand_proto_goTypes = nil
	file_proto_product_brand_brand_proto_depIdxs = nil
}
