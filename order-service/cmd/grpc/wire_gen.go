// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/people257/poor-guy-shop/common/server"
	cart3 "github.com/people257/poor-guy-shop/order-service/api/cart"
	order3 "github.com/people257/poor-guy-shop/order-service/api/order"
	"github.com/people257/poor-guy-shop/order-service/cmd/grpc/config"
	"github.com/people257/poor-guy-shop/order-service/cmd/grpc/internal"
	cart2 "github.com/people257/poor-guy-shop/order-service/internal/application/cart"
	order2 "github.com/people257/poor-guy-shop/order-service/internal/application/order"
	"github.com/people257/poor-guy-shop/order-service/internal/domain/cart"
	"github.com/people257/poor-guy-shop/order-service/internal/domain/order"
	"github.com/people257/poor-guy-shop/order-service/internal/infra/client"
	"github.com/people257/poor-guy-shop/order-service/internal/infra/repository"
)

// Injectors from wire.go:

// InitializeApplication 初始化应用程序
func InitializeApplication(ctx context.Context, configPath string) (*Application, func(), error) {
	configConfig := config.MustLoad(configPath)
	grpcServerConfig := config.GetGrpcServerConfig(configConfig)
	serverServer, cleanup := server.InitializeServer(ctx, grpcServerConfig)
	databaseConfig := config.GetDBConfig(configConfig)
	db := internal.NewDatabase(databaseConfig)
	gormDB := internal.NewGormDB(db)
	query := internal.NewQuery(db)
	orderRepository := repository.NewOrderRepository(gormDB, query)
	domainService := order.NewDomainService(orderRepository)
	servicesConfig := config.GetServicesConfig(configConfig)
	userServiceClient, err := client.NewUserServiceClientFromConfig(servicesConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	productServiceClient, err := client.NewProductServiceClientFromConfig(servicesConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	paymentServiceClient, err := client.NewPaymentServiceClientFromConfig(servicesConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	inventoryServiceClient, err := client.NewInventoryServiceClientFromConfig(servicesConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	service := order2.NewService(orderRepository, domainService, userServiceClient, productServiceClient, paymentServiceClient, inventoryServiceClient)
	grpcHandler := order3.NewGrpcHandler(service)
	cartRepository := repository.NewCartRepository(gormDB, query)
	cartDomainService := cart.NewDomainService(cartRepository)
	cartService := cart2.NewService(cartRepository, cartDomainService)
	cartGrpcHandler := cart3.NewGrpcHandler(cartService)
	application := NewApplication(serverServer, grpcHandler, cartGrpcHandler)
	return application, func() {
		cleanup()
	}, nil
}
